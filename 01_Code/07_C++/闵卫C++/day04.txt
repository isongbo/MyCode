一、类和对象
1.通过属性和行为描述具体的对象，其中属性表示对象的静态特征，而行为则表示对象的动态特征。
2.拥有相同属性和行为的对象被分为一组，即一个类。
         属性  行为
狗     犬种   进食
        犬龄   睡眠
        体重   玩耍
        毛色
学生 姓名   吃饭
        年龄   睡觉
        学号   学习
手机 品牌   接打电话
        型号   收发短信
        价格   上网
                  玩游戏
3.类即逻辑抽象
1)简单类型：只能表示一个属性（变量）。
2)数组类型：可以表示多个属性（元素），但是类型必须相同。
3)结构体类型：可以多个类型不同的属性（字段），但缺少对行为（函数）的描述。
4)类类型：既可以表示多个不同类型的属性（成员变量），同时也可以表示多个不同的行为（成员函数）。
现实世界     逻辑空间       虚拟世界
   小狗    ->    狗类     ->   狗对象
真实对象     抽象描述       逻辑对象
                         ^
                       OOP
二、类的定义与实例化
1.类的主要内容
1)成员变量：描述对象的各种属性。
2)成员函数：描述对象的各种行为。
3)构造函数：对对象做初始化。
4)析构函数：对对象做终结化。
5)访控属性：决定成员的访问特性。
    public(struct缺省) - 公有，
                                      谁都可以访问；
    private(class缺省) - 私有，
                                     只有自己可以访问；
    protected - 保护，只有自己和自己的子类                          可以访问。
6)继承方式与基类：继承。
class Student {
public:
    // 吃饭
    void eat (string const& food) { ... }
    // 睡觉
    void sleep (int time) { ... }
    // 学习
    void learn (string const& course) { ... }
private:
    string m_name; // 姓名
    int m_age; // 年龄
    int m_no; // 学号
};
2.构造函数
1)函数名与类名相同，且没有返回类型。
2)构造函数在创建对象时被系统自动调用。
A.直接定义变量，栈对象；
B.用new操作符创建对象，堆对象。
3)构造函数在对象整个生命期内，一定会被调用，且仅被调用一次。
4)构造函数负责对成员变量进行初始化，分配必要的资源，设置对象的初始状态。
三、构造函数与初始化表
1.构造函数可以重载
1)构造函数通过参数表的差别化以重载的形式提供不通过的初始化方法。
2)重载的构造函数通过构造实参的类型选择匹配。
3)使用缺省参数可以减少构造函数重载版本的数量。注意避免重载冲突。
2.具有特殊意义的构造函数
1)缺省构造函数
能够以无参的方式被调用的构造函数称为缺省构造函数。
缺省构造函数表示对象的默认初始化状态。
如果一个类中没有定义任何构造函数，那么编译器就会自动为其生成一个缺省构造函数。对于基本类型的成员变量不做任何处理，而对于类类型的成员变量，调用其相应类型的缺省构造函数。
2)类型转换构造函数
凡是可以通过一个参数调用的构造函数都属于类型转换构造函数。如：
class 目标类型 {
    目标类型 (源类型 const& 引用) { ... }
};
通过该构造函数将源类型的对象隐式或显式地转换为目标类型的对象。如果希望该转换必须显式完成，可以在该类型转换构造函数前面加上explicit关键字。
3)拷贝构造函数
当用一个对象构造与它同类型的副本对象时，编译器会通过拷贝构造函数完成该副本对象的初始化。如：
class 类 {
public:
    类 (类 const& 引用) { ... }
};
如果一个类没有定义拷贝构造函数，编译器就会自动提供一个缺省的拷贝构造函数，该函数对于基本类型的成员变量，按照字节复制，而对于类类型的成员变量，则会调用其相应类型的拷贝构造函数，构造其副本。
多数情况下不需要自己定义拷贝构造函数，编译器提供的缺省版本已经足以满足要求。但在某些特殊情况下，需要自行定义以弥补缺省版本的不足。
拷贝构造会降低应用程序的性能，设计时尽量避免，比如通过引用传递参数。
编译器会通过必要的优化策略，减少拷贝构造的机会。通过-fno-elide-constructors选项可以关闭此优化特性。
自定义构造函数              系统定义构造函数
无                                   缺省构造函数
                                       缺省拷贝构造函数
非拷贝构造函数              缺省拷贝构造函数
拷贝构造函数                 无
3.初始化表
1)通过在类的构造函数中使用初始化表，指明该类的成员变量如何被初始化。
2)类的类类型成员变量，要么在初始化表中显式初始化，要么通过相应类型的缺省构造函数初始化。
3)类的常量型和引用型成员变量，必须在初始化表中显式初始化，不能在构造函数体中赋初值。
4)类的成员变量按其在类中被声明的顺序依次初始化，而与其在初始化表中的排列顺序无关。















