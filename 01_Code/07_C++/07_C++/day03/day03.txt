一.c++ 中的类型转换运算符
    1.1 static_cast<类型>(变量)
    在某一个方向上  可以做隐式类型转换 
    void*         int*  double*
    1.2 dynamic_cast<类型>(变量)
    适合具有多态性的父子类之间 进行转换 
    1.3 const_cast<类型>(变量)
    专业去const的转换 
    1.4  reinterpret_cast<类型>(变量)
    这最接近c中的强制类型转换
    适合各种指针之间的转换  以及整数变成指针
    指针变成整数

二.c++ 之父 给c程序员的建议
     2.1 c++程序中尽量的少使用宏
     使用const 定义常见的常量 
     使用enum  定义多个常量 
     使用 inline 替代带参的宏
     2.2 使用namespace  来避免命名冲突 
     使用模板  刻画一组类型 或者 函数 
     2.3 变量随时用 随时定义 以保证变量的初始化 
     for（int  x=0;i<10;i++）
     2.4 尽量的少使用  char  *  char数组 
           string类型 可以做的更好 
     2.5 少使用 malloc  free  
          new  delete   new[]  delete[]  会做的更好
     2.6 尽量避免类型转换 
          如果非要类型转换 使用四个转换运算符中的一个
     2.7 逐步建立面向对象的思想 
      
 三.面向对象编程
     3.1 什么是对象 
     一切皆对象  
    程序就是由一组对象组成的  并且通过发消息通知相互做什么
    每个对象 有一个类型 
    同类型的对象 可以接收 或者发出相同的消息
    3.2 现实 到  计算机   
    分类
    共同核心特征:
           成员变量 
    共同的行为:
           成员函数 
    猫      ------->        猫类   -------->Tom猫
    英雄   ------->       英雄类 -------->德玛西亚
    类别是抽象  对象是具体的

    3.3   抽取一个汽车类  
    特征:
            string    name;
            string    type;
            double   price;
            string     color;
            double   maxspeed; 
    行为:
             void  start();
             void  run(double  speed);
             void  stop();             
   3.4 如何描述一个类别
         3.4.1 使用结构体描述   struct
         特征  -------成员变量
         行为  -------成员函数 
         
         写一个时间类   抽取时间的特征  小时  分钟   秒
         行为可以显示一个时间  格式 hh:mi:ss   show() 
         可以走一秒 每过一秒钟增加一秒   dida()
         运行一个时间类的对象 不断显示不断增加秒   run()  
         
         3.4.2 使用类描述   class
         struct   -----  class 
         struct 中所有的数据 默认都是公开的 public
             公开的数据可以在类内 以及类外访问 
         class  中的数据 默认是 私有的   private
              私有的数据 只能直接在类内访问 不能直接在类外访问
         可以使用访问权限修饰符 对数据进行修饰
              从访问权限修饰符开始 一直到下一个修饰符出现
    3.5 使用class  描述一个日期类别 
          私有的特征:    
                 int  year  
                 int   month   
                 int  day
          公开的行为: 
                 显示一个日期   show();  显示格式 yyyy-mm-dd
                 设置日期  默认值2015 1 1 
                 void  setDate(int y=2015,int m=1,int d=1);      
     3.6 构造函数 
           3.6.1 什么是构造函数
           一种特殊函数   函数名和类名相同
           没有返回值类型 
           构建一个对象时 自动调用一次 
           目的是为了初始化对象            
           3.6.2  一个对象被创建的过程 
           根据对象的类型大小  分配内存空间 
           处理成员变量
                  成员变量如果是基本类型 什么也不做
                  成员变量如果是类类型  则构建它 
            调用构造函数 
           3.6.3  默认的构造函数 
           如果一个类型 没有提供构造函数  则编译器会自动提供
                  一个无参构造函数。但一旦给一个类型提供构造函数
                 则编译器回收默认的构造函数。
           3.6.4 构造函数的应用
                构造函数 可以有多个 并且可以重载 
                       会根据创建对象传入的参数不同 调用不同
                       的构造函数      
                通常可以通过参数的默认值  简化构造函数的个数
                       但是不要形成调用冲突  
                初始化列表
                       const类型的成员变量 或者引用类型的成员
                       就必须使用初始化列表来解决。
                       构造函数参数列表之后 实现体之前的位置
                              以冒号开头。构造函数调用之前就调用
                              这段代码。
                       当构造函数函数中的参数名 和 成员变量名
                              相同时可以进行区分。
           3.6.5 练习
           使用class  写一个时间类  
           特征:
                   int  hour;
                   int  min; 
                   int  sec;
            行为:
                   构造函数  参数的默认值 0  0  0  可以对
                         成员变量进行赋值。 
                   设置时间的函数  参数的默认值 12  0  0 
                          可以对成员变量进行赋值。
                   显示时间的函数   显示格式 hh:mi:ss   
     3.7 在实际开发中  头文件 和 实现文件 要分离 
          头文件:
          #ifndef    宏      
          #define   宏   
                 函数声明   偶尔会有函数实现
                 类型定义
                 变量声明     
          #endif
         实现文件:
         条件编译删除
         class  部分删除 
         成员变量删除
         访问权限删除
        
         构造函数 成员函数名前 加 类名::
         如果函数 有参数的默认值 要在实现文件中去掉 
         写函数的实现
   
    3.8 写一个日期类型  
          特征： 年  月  日
          行为 :
          构造函数  有三个参数 默认值 2015  1 1 
                 可以对成员变量进行赋值
          设置日期的函数  有三个参数 默认值 1970 1  1
                 可以对成员变量进行赋值
          显示日期  显示 格式 yyyy-mm-dd 
          要求头文件和实现文件分离实现 
       










   
