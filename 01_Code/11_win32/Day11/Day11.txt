制作动态库
   两种导出方式，都将 函数的偏移地址导到了dll文件头中
                            配套的lib文件中保存的都为函数名对应编号

 声明导出 - 函数声明前面增加_decspec(dllexport)
                  导出的为 换名之后的函数名 对应 偏移地址
                  lib文件中保存的 换名之后的函数名 对应 编号
 模块定义文件导出 - 在工程增加一个.def为后缀的文件
                  导出的为 可以不做换名的函数名 对应 偏移地址
                                 也可以换名的函数名 对应 偏移地址
                  lib文件中保存的 可以为不做换名的函数名 对应 编号
                                 也可以为换名之后的函数名 对应 编号

使用动态库
隐式链接 - 操作系统加载器负责动态库执行，操作系统加载器
                 读取.exe文件中（链接器从lib文件中抓来的）信息，
                 可以获知让哪个动态库执行

                 操作系统加载 拿着函数的编号 到 dll文件头中查询
                 对应的 偏移地址，（因为操作系统加载器负责动态
                 库执行所以操作系统加载器可以获取动态库首地址）                  

显式链接 - 程序员自己调用LoadLibrary函数负责动态库执行
                  函数的参数指明让哪个动态库执行
                 
                  程序员自己调用GetProcAddress函数，利用第一个
                  参数可以获取动态库首地址，利用第二个参数
                 （字符串形式的函数名）到dll文件头中查询对应的
                  偏移地址


磁道
扇区 - 连续的512个字节。
簇 - 硬盘管理文件的最小单位，即便文件只有一个字符也要占用
       1簇空间

磁盘管理方式
   FAT32 - 1簇 = 16/32/64扇区
   NTFS - 1簇 = 8个扇区




//拷贝文件
BOOL CopyFile(
  LPCTSTR lpExistingFileName, // 源文件路径名
  LPCTSTR lpNewFileName,      // 目的地路径名
  BOOL bFailIfExists  // TRUE-不覆盖  FALSE-覆盖
);













