C语言中可以采用分组的方式管理大量的语句
每组语句叫做一个函数，每个函数都应该完成
    一个完整的工作
任何一个C语言程序一定由一个或者多个函数
    构成
每个函数都有自己的名字，不同函数的名字不同
任何C语言程序中必须包含一个叫做main的函数,
	这个函数叫做主函数
整个程序从主函数里的第一条语句开始执行，当
    主函数中最后一条语句结束时整个程序结束
不同函数之间在执行时间上有联系
1.所有函数的执行时间必须是连续而且不重叠的
2.不同函数的执行时间顺序可以根据需要任意
    选择
3.如果函数A在工作过程中停下来而让函数B接着
    工作，函数B在完成所有工作之后必须让函数
	A接着工作

如果两个函数之间符合上述第三条的关系则它们
   之间存在函数调用关系
如果两个函数之间存在函数调用关系，则先开始
    工作的函数叫调用函数，后开始工作的函数
	叫被调用函数
函数调用关系是有时间范围的，在被调用函数的
    执行过程中这个调用关系存在

演示函数调用过程

每个函数可以声明自己的变量
不同函数的变量可以重名，它们不会互相冲突
一个函数不能随便使用另外一个函数的存储区

在函数调用过程中经常需要进行两个函数之间
    数据的传递
函数调用过程中数据有可能在两个完全相反的
    方向上进行传递，有可能从调用函数传递
	给被调用函数也有可能从被调用函数传递
	给调用函数
不论哪个方向的数据传递都需要被调用函数提供
    存储区来存储它们

被调用函数只能把一个数据传递给调用函数，
    这个数据叫做被调用函数的返回值
为了记录这个返回值数据需要被调用函数提供
    一个返回值存储区
必须把返回值存储区的类型名称写在函数名称
    前，如果不使用返回值存储区则应该在函数
	名称前写void。如果函数名称前什么都没有写
	则计算机会为函数提供一个整数类型的返回值
	存储区。
被调用函数只能使用return关键字向返回值存储区
    里放数字
调用函数可以把整个函数调用语句当做数字使用，
    这个数字就是被调用函数的返回值

演示返回值的使用

返回值存储区不能用来长期记录数字，调用函数
    中或者立刻使用这个数字或者把它转存到
	另外一个存储区

练习
    1.编写函数从键盘得到一个整数并把它
	    传递给调用函数

如果函数有返回值存储区但是没有使用return
    关键字向这个存储区里放数字，它里面的
	数字就是随机的

exit标准函数可以结束整个程序的执行
为了使用这个函数需要包含stdlib.h文件

可以同时把多个数据从调用函数传递给被调用
    函数
这些数据的类型可以不同
被调用函数需要声明一组变量，这些变量叫做
    形式参数，它们用来记录传递的数据
形式参数的声明要写在函数名称后面的小括号里
所有形式参数声明统称为形参列表
如果多个形式参数的类型一样也必须要为每个形式
    参数单独写数据类型
如果函数没有形式参数则应该使用void作为形参
    列表。如果形式参数列表什么都没写则表示
	计算机可以为这个函数提供任意多个任意类型
	的形式参数存储区。
在函数调用语句中必须为每个形式参数提供一个
    对应的数字，这些数字叫做实际参数
多个实际参数之间必须使用逗号分隔
实际参数不一定非要代表存储区

形式参数代表的存储区是在函数调用发生的时候
    临时创建出来的，在函数调用结束的时候
	又被销毁了。这些存储区只能在被调用函数
	工作的时间范围内才可以使用。

练习：
    1.编写函数计算两个整数的和并把计算结果
	     传递给调用函数(两个整数来自于调用
		函数)

数组可以作为形式参数使用
数组作为形式参数使用时真正的形参并不是
    一个数组而是一个变量，这个变量可以
	当做数组使用
可以使用数组名称代表这个变量
数组作为形式参数的时候被调用函数只提供了
    一个存储区
数组作为形式参数的时候数组中包含的存储区
    一定不是被调用函数提供的
利用数组作为形式参数可以让被调用函数使用
    其他函数的存储区
利用数组作为形式参数可以把多个数据从被调用
    函数传递给调用函数。因此数组形参又叫做
	输入输出参数。
声明数组形式参数的时候可以省略中括号里的
    数字，同时使用另外一个整数类型形参表示
	数组中存储区个数
和数组形式参数配合使用的实际参数必须是地址
    数据，通常用数组名称

练习：
    1.编写函数把一个数组中所有内容变成相反数
    2.编写函数生成一张彩票，其中包括7个1到
	    36之间的随机数。主函数把彩票内容
		打印在屏幕上。

一个函数可以分成两部分，大括号里的部分叫
    函数体，大括号前面的部分叫函数声明
函数声明可以单独写成一条语句
当把函数声明单独写成一条语句时形式参数
    名称可以不写

编译器编译的时候如果先遇到函数调用语句则会
    猜测函数的格式，这个猜测的格式叫函数的
	隐式声明。函数的隐式声明中包含一个整数
	类型的返回值存储区和任意多个任意类型的
	形式参数。
函数的隐式声明是不可靠的，有可能出错的
把函数声明单独写成一条语句放在文件开头，这
    叫做函数的显式声明，这可以避免隐式声明
	带来的问题。
除了主函数以外的所有函数都应该显式声明

函数可以调用自己，具有这种特征的函数叫
    递归函数

如果一个问题具有如下特征则适合采用递归
    方式解决
1.问题本身很复杂，难以直接解决
2.问题可以被分解成几个小问题，其中至少一个
     小问题和原来问题本质上一样只是稍微
	 简单一点

递归函数的编写步骤
1.编写语句描述问题的分解方式（假设递归
     函数已经可以正常工作了）
2.在函数的开头编写分支处理无法再分解的
    情况（这个分支必须保证函数可以结束）

用打印某个正整数到1之间的所有整数演示递归
    函数的编写

画图演示程序执行过程

递归函数和循环在很多时候作用类似，但是它们
    代表不同解决问题的思路

用递归函数解决问题的思路叫递归，用循环解决
    类似问题的思路叫递推

练习：
    1.编写递归函数计算从某个正整数到1之间
	    所有整数的和

预习：
    1.变量的生命周期和作用域
	2.程序的分段
	3.声明变量时可以使用的关键字
	4.指针变量

作业：
    1.编写函数在屏幕上打印如下内容
       1 X 9 = 9
	   2 X 8 = 16
	   3 X 7 = 21
	   4 X 6 = 24
	   5 X 5 = 25
      每行使用一次函数调用打印
	  函数的个数越少越好
    2.编写递归函数计算给定编号的
       费氏数列数字
	   1 1 2 3 5 8 13 21 ...
       1 2 3 4 5 6  7  8



