数组名称不可以代表任何存储区，它代表的是
    数组中第一个存储区的地址
数组名称不可以被赋值
数组名称可以加一个整数n，计算结果是数组名称
    代表的地址数据加上n个数组中存储区的大小
数组名称加n后的结果刚好是下标为n那个存储区
    的地址
可以对数组名称进行sizeof计算，得到的结果是
    整个数组中包含的字节个数

C99规范中允许声明数组时使用变量表示数组
   中存储区个数，这种数组叫变长数组
变长数组中存储区个数也不可以改变，只是
    可以在程序运行的时候确定
变长数组不可以初始化

二维数组也代表内存中一组连续的同类型存储区
二维数组把这些存储区等分成了几组
声明二维数组时需要提供组的个数和组内存储区
    个数这两个数字

二维数组也不可以当做一个整体使用，通常每次
    只使用其中某一个存储区
为了表示二维数组中的某个存储区需要两个下标，
    第一个下标用来表示分组编号，第二个下标
	用来表示组内编号
这两个下标的范围也是从0开始到个数减一为止，
    不可以使用超过范围的下标
可以采用循环嵌套结构依次处理二维数组中每个
    存储区

既可以把二维数组看成多个一维数组进行初始化
    也可以把它看成多个存储区进行初始化
如果初始化数据少于数组中存储区个数则后面
    的存储区自动被初始化成0
如果可以根据初始化数据的个数计算出分组个数
    则可以省略二维数组声明中的分组个数

二维数组名称代表其中第一个存储区的地址
二维数组名称不代表存储区，所以不可以被赋值
二维数组名称加上n结果是组下标为n那组中
   第一个存储区的地址（相当于跨越了n组
   存储区的大小）
对二维数组名称进行sizeof计算的结果是二维
    数组中包含的总字节个数

可以对一维数组名称进行取地址操作，可以把
    结果看成是一个二维数组名称
这个新的二维数组中只有一组存储区，这些
    存储区就是原来一维数组中的所有存储区
这个新的二维数组名称所代表的地址数据和
    原来一维数组名称所代表的地址数据一样
这个新的二维数组名称加n的时候所采用的规则
    和原来一维数组名称不同

可以给二维数组名称只提供一个下标，这可以
    用来表示一个一维数组
这个一维数组中所包含的存储区就是这个下标
    作为组下标对应组里面的所有存储区
这个写法的各种使用方式和一维数组名称完全
    一样，所以可以把它当做一维数组名称
	看待
用二维数组名称加下标然后前面写*的方式也
    可以用来表示同样的一维数组

练习：
    1.布雷练习
    2.把地图中的数字补充上

预习：
    1.函数





