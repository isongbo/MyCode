_afxWndFrameOrView==="AfxFrameOrView42sd"

CMyFrameWnd *pFrame = new CMyFrameWnd;
pFrame->Create( NULL, "MFCCreate" )//函数内部this为pFrame
{
  //加载菜单
  CreateEx(..,NULL,..)//函数内部this为pFrame
  {
    CREATESTRUCT cs;
    ...
    cs.lpszClass = NULL;//下面将更改
    ...
    cs.hInstance = AfxGetInstanceHandle();
    PreCreateWindow(cs)
    {
      AfxDeferRegisterClass(...)
      {
        WNDCLASS wndcls;
        ...
	wndcls.lpfnWndProc = DefWindowProc;//????????????
        ...
        _AfxRegisterWithIcon(&wndcls, "AfxFrameOrView42sd" )
        {
          &wndcls->lpszClassName = "AfxFrameOrView42sd";
          AfxRegisterClass(&wndcls)
          {
            ::RegisterClass(..)//注册一个窗口类
          }
        }

      }
      cs.lpszClass = "AfxFrameOrView42sd";
    }
    AfxHookWindowCreate(pFrame)
    {
      _AFX_THREAD_STATE* pThreadState = _afxThreadState.GetData();
           //获取全局变量&ccc（当前程序线程信息）
      ::SetWindowsHookEx(WH_CBT,_AfxCbtFilterHook ..);
           //利用win32 api函数在程序中埋下一个类型为WH_CBT的钩子
      pThreadState->m_pWndInit = pFrame;
           //将自己new的框架类对象地址pFrame保存到全局变量ccc中
    }
    ::CreateWindowEx(...);
     //此函数一旦执行成功，立即执行钩子处理函数

  }
}
***********************************************************
//钩子处理函数
_AfxCbtFilterHook(.wParam..)
{
  _AFX_THREAD_STATE* pThreadState = _afxThreadState.GetData();
              //获取 全局变量&ccc
  CWnd* pWndInit = pThreadState->m_pWndInit;
              //从ccc中取出 自己new的pFrame===pWndInit
  HWND hWnd = (HWND)wParam;//刚刚创建的窗口句柄
  pWndInit->Attach(hWnd)//函数内部this为pFrame===pWndInit
  {
    CHandleMap* pMap = afxMapHWND(TRUE)
    {
      AFX_MODULE_THREAD_STATE* pState = AfxGetModuleThreadState();
            //获取&bbb
      pState->m_pmapHWND = new CHandleMap;
            //new了一个映射类对象，并将对象地址保存到bbb中。
      return pState->m_pmapHWND;//返回映射类对象地址
    }
    pMap->SetPermanent(pFrame->m_hWnd = hWnd, pFrame)
          //函数内部的this为pMap(映射类对象地址)
    {
      m_permanentMap[hWnd] = pFrame;
    }
  } 
  WNDPROC afxWndProc = AfxGetAfxWndProc();
           //获取AfxWndProc函数的地址
  SetWindowLong(hWnd, GWL_WNDPROC,(DWORD)afxWndProc);
           //利用WIN32 API 函数将窗口处理函数更改为
           //AfxWndProc(真正的窗口处理函数)
}
***********************************************************
//以WM_CREATE消息为例，捎带想着点WM_PAINT消息
AfxWndProc(...)
{
  CWnd* pWnd = CWnd::FromHandlePermanent(hWnd)
  {
    CHandleMap* pMap = afxMapHWND()
    {
      AFX_MODULE_THREAD_STATE* pState = AfxGetModuleThreadState();
                   //获取&bbb
      return pState->m_pmapHWND;//返回上面保存的映射类对象地址
    }
    pWnd = pMap->LookupPermanent(hWnd)
          //函数内部this为pMap（映射类对象地址）
    {
      return m_permanentMap[hWnd];
    }
  }
  AfxCallWndProc(pWnd..)//参数pWnd===pFrame
  {
    pWnd->WindowProc(..)
    {
      //回到自己的代码
    }
  }
}









































