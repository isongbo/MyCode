一.约束 constraint
   1.1 约束种类
   主键约束   primary key   pk
       如果一个字段加了主键约束 则这个字段
         的值不能重复 并且值不能是NULL值
       一个表只能有一个主键
   唯一性约束 unique        uk 
       字段的值不能重复 
   非空约束   not null      nn
       字段的值不能是NULL值 
   检查约束   check         ck
       字段的值 必须符合检查条件 
   外键约束   references    fk 
              foreign key 
   1.2 约束的实现
      列级约束实现
          在建立表的某一列时 直接在这一列
          之后加约束限制。
      表级约束实现 
          在建立完表的所有列之后,再选择
          某些列加约束限制。
   1.3 主键的列级约束
      create table col_cons(
          id   number primary key,
          name  varchar2(30)
      );
      insert into col_cons values(1,'a1');
      ERROR at line 1:
      ORA-00001: unique constraint 
      (SYSTEM.SYS_C007254) violated
     为了管理 和 记忆方便 要给约束起名字
      drop   table col_cons;
      create table col_cons(
          id   number constraint 
            col_cons_id_pk primary key,
          name  varchar2(30)
      );
      insert into col_cons values(1,'a1'); 
      ERROR at line 1:
      ORA-00001: unique constraint 
      (SYSTEM.COL_CONS_ID_PK) violated    
  1.4 练习
     建立一张表 empn 有如下字段和约束
     id   number   primary key
     fname  varchar2(30) unique
     sname  varchar2(30) not null 
     并且要求给每个约束起上名字 要求是
     表名_字段名_约束的简写。
     增加一个字段 salary  number 要求
     这个约束符合检查约束 检查条件是
     salary>3500
     drop   table  emp100;
     create table  emp100(
         id  number  constraint 
           emp100_id_pk primary key,
         fname varchar2(30) constraint
           emp100_fname_uk  unique,
         sname varchar2(30) constraint
           emp100_sname_nn  not null,
         salary  number   constraint
           emp100_salary_ck check(salary>3500)        
     );
     insert  into emp100 values(1,'xsy',
       'xsy',3501);
  1.5 主键的表级约束
     create table  table_cons(
         id   number,
         name varchar2(30),
         salary  number ,constraint
           table_cons_id_pk 
           primary key(id) 
     );   
  1.6 使用表级约束 建立下面的表   
  建立一张表 empn 有如下字段和表级约束
     id   number   primary key
     fname  varchar2(30) unique
     sname  varchar2(30)  
     并且要求给每个约束起上名字 要求是
     表名_字段名_约束的简写。
     salary  number 要求
     这个约束符合检查约束 检查条件是
     salary>3500   
  create table  emp123(
      id   number,
      fname varchar2(30),
      sname varchar2(30),
      salary  number,constraint 
        emp123_id_pk  primary key(id),
        constraint emp123_fname_uk
        unique(fname),constraint 
        emp123_salary_ck check(salary>3500)
  );    
 
 二.外键约束
    2.1概念
    外键约束涉及到两张表 一张叫父表(主表)
        一张叫子表(从表)。
    子表:定义了外键的表
    外键字段的取值 受限于父表中字段的取值
        要么取父表中的字段值 要么取NULL值
    2.2 外键的实现
       建表:
       先建立父表 后建立子表 除非先不考虑
         主外键关系。
       插入数据:
       一般先插入父表数据 除非子表的外键
         值使用NULL值
       删除数据:
       先删除子表数据 除非父表的数据 和
         子表没有关联 或者使用级联
       删除表:
       先删除子表 后删父表除非使用
         cascade constraint
    2.3 举例
       建表:
       create table parent100(
           id  number  primary key,
           name varchar2(30)
       );           
       create table child100(
           id  number  primary key,
           fname varchar2(30),
           sname varchar2(30),
           fid  number constraint 
             child100_fid_fk references
             parent100(id)
       );
       插入数据:
       insert  into child100 values(
           1,'ta','ta',1);            
       ERROR at line 1:
       ORA-02291: integrity constraint 
       (SYSTEM.CHILD100_FID_FK)not found     
       insert  into child100 values(
           1,'ta','ta',NULL);
       insert  into parent100 values(
           1,'test1');
       insert  into parent100 values(
           2,'test2');    
       insert  into child100 values(
           2,'tb','tb',1);
       删除数据:
       delete from parent100 where id=1;
       ERROR at line 1:
       ORA-02292: integrity constraint 
       (SYSTEM.CHILD100_FID_FK)record found
       delete from parent100 where id=2;
       删除表:
       drop  table parent100;
       ERROR at line 1:
       ORA-02449: unique/primary keys 
       in table referenced by foreign keys
       drop  table parent100 
           cascade constraint;
    2.4 使用外键 建立下面的两张表
    部门表 deptn       员工表empn 
    id  number pk      id  number pk
    name varchar2(30)  name varchar2(30)
                       salary number
                       dept_id number fk
    数据部门表是 1  test1    2  test2
    员工表中的数据是  1 ea 5000 1
    2   eb  5500 1    3 ec  6000 1 
    4   ed  11000 2   5 ee  15000 2 
    建立表之前 先删除表 并且把语句都
    写入一个脚本文件。
    did  dname  eid ename salary dept_id
    1    test1  1   ea    5000    1
    1    test1  2   eb    5500    1 
    1    test1  3   ec    6500    1  
    2    test2  4   ed    11000   2                         
    第一范式:每个字段的值不能再分
    第二范式:每条数据可以被唯一区分
    第三范式:在满足第二范式的基础上 
        消除了传递依赖  
   2.5 级联
      on delete cascade 级联删除
         删除父表数据时 把子表关联的数据
         删除
      on delete set null 级联置空
         删除父表数据时 把子表关联的数据
         的外键设置成NULL值
   2.6 外键的表级约束
    create table parent200(
        id  number  primary key,
        name varchar2(30)
    );           
    create table child200(
        id  number  primary key,
        fname varchar2(30),
        sname varchar2(30),
        fid  number,constraint 
           child200_fid_fk 
           foreign key(fid) references
           parent200(id)
     );        

三.数据库中的其它对象
   3.1 序列 sequence 
      3.1.1 作用
      用来产生不重复的值 一般用来做主键
          的值。
      3.1.2 语法
      create  sequence  序列名;
      create  sequence  testseq_id;
      如何使用?
      testseq_id.nextval
      testseq_id.currval
      3.1.3 举例
      create table  testseq(
          id  number  primary key,
          name varchar2(30)
      ); 
      create  sequence  testseq_id;     
      insert into testseq values(
        testseq_id.nextval,
        'test'||testseq_id.currval);
      3.1.4 删除序列
      drop  sequence  序列名;
  3.2 索引  index
     3.2.1 作用
     底层通过树状结构 来组织数据
       通过消耗掉大量的空间 和 时间 来
       达到加速查询的目的。
     3.2.2 举例
     三亿条数据   500s
     索引查找     0.01s 0.00 
     3.2.3 语法
     create  index 索引名 on 
         表名(字段名);
     create table emp1412 as 
         select id,first_name name,salary
         from s_emp;  
     set timing on;            
     create  index emp1412_ind on
         emp1412(name);
     /* 删除索引 */
     drop  index  索引名;
  3.3 视图  view
     3.3.1 本质
     视图本质上 就是一条sql语句 
     视图所对应的数据 相对于本身而言 
     视图本身的空间可以忽略不计
     3.3.2 语法
     create  or replace  view  视图名
         as select语句;
     create  or replace  view myview
         as select id,first_name name
         ,salary from s_emp;        
     3.3.3 作用
     可以对同一份物理数据作出不同的表现
       select * from myview;
     简化了查询
       select * from(select id,first_name
       ,salary from s_emp);
       
 四.oracle中的分页技术
    rownum   行编号
    select id,first_name,salary 
        from  s_emp;
    /* rownum 叫伪列 */            
    select rownum,first_name,salary
        from  s_emp;
    一页显示11条  显示第一页数据
    select rownum,first_name,salary
        from  s_emp where rownum<12;      
    一页显示11条  显示第二页数据 
    select rownum,first_name,salary
        from  s_emp where rownum<23
        and rownum>11;   
    /* 通过给rownum 起别名 去除rownum
       的特性 */
    select * from(
      select rownum r,first_name,salary
        from  s_emp where rownum<23
      )where r>11;   
    按照工资排序之后 一页显示11条 要第
      三页数据。
   select  first_name,salary
       from s_emp order by salary;
    先排序 还是先编号?
           
      
             
       
                