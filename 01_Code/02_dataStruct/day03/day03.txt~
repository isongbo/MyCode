复习：
1.单链表
1.1 概念
   一种经典的链式存储结构, 单方向的链表结构
   单链表的主要构成： 头指针 + 节点
   节点的主要构成：数据内容 + 下一个节点的地址
如：
   struct Node
   {
       int data;
       //double data;
       //struct Student s;
       //...
       struct Node* next;
   }; 
扩展：
   学生信息管理系统 - 增删改查
      a.学生信息读出来,放到数组中
      b.学生信息读出来,放到链表中
      c.直接在文件内部进行处理

1.2 基本操作
   创建 销毁 插入 删除 ....
1.3 扩展
   单链表 循环单链表  双链表 循环双链表 ...
------------------------------------------------------
今天内容:
   (1)堆栈(Stack)
   (2)队列(Queue)
   (3)树以及二叉树(Tree)

1.堆栈(Stack)
1.1 概念
   具有后进先出特性的数据结构  LIFO(last in first out)
1.2 基本操作
   创建 销毁 入栈 出栈  遍历  ...
1.3 使用顺序存储结构实现堆栈的操作

练习：
   mkdir arrStack;将01arrStack.c文件拆分为3个文件:
stack.h stack.c main.c;编写Makefile文件

1.4 使用链式存储结构实现栈的操作
练习：
   将stack.c拆分为三个文件:stack.h stack.c main.c,编写Makefile文件

2.队列(Queue)
2.1 概念
  具有先进先出特性的数据结构, FIFO(First In First Out)
2.2 基本操作
  创建 销毁 入队  出队 ...
2.3 使用链式存储结构实现队列的基本操作

练习：
   将queue.c文件拆分为 queue.h queue.c main.c文件，编写Makefile文件

扩展：
   :%s /源字符串/目标字符串 
  =>表示将文件中每一行中第一个源字符串替换为目标字符串
   :%s /源字符串/目标字符串/g
  =>表示将文件中每一个源字符串替换为目标字符串

2.4 使用顺序存储结构实现队列的操作
   
作业：
   实现队列中剩余的操作
明日预报：
   (1)树以及二叉树,复习二级指针
   (2)4种排序算法


   























   
     



















